version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "8000:8000"
    volumes:
      # Mount the models directory for persistence and potential pre-downloading
      - ./downloaded_models:/app/downloaded_models
      # Optional: Mount code for development (reflects changes without rebuild)
      # - .:/app
    environment:
      # Add any backend-specific environment variables here if needed
      # e.g., PYTHONUNBUFFERED: 1
      # Ensure CUDA is visible if using GPU passthrough (requires Docker Engine setup)
      # NVIDIA_VISIBLE_DEVICES: all
      # NVIDIA_DRIVER_CAPABILITIES: compute,utility
      # Add more environment variables as needed
      PYTHONUNBUFFERED: 1 # Ensures Python logs appear in Docker logs immediately
    # deploy: # Uncomment and configure if using NVIDIA GPU
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1 # or 'all'
    #           capabilities: [gpu]
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80" # Map host port 3000 to container port 80 (Nginx default)
    depends_on:
      - backend
    environment:
      # These will be substituted into the JS files by docker-entrypoint.sh
      REACT_APP_API_BASE_URL: http://backend:8000
      REACT_APP_API_REMOVE_BG_URL: http://backend:8000/remove-background
      REACT_APP_API_MODELS_URL: http://backend:8000/models
      # Add other REACT_APP_ variables needed by the frontend here
      # Make sure they match the ones used in your frontend code
      REACT_APP_API_HEALTH_URL: http://backend:8000/health
      REACT_APP_API_AVAILABLE_MODELS_URL: http://backend:8000/models # Assuming same as models list
      REACT_APP_API_LOAD_MODEL_URL: http://backend:8000/models # Needs specific endpoint if different
      REACT_APP_API_REMOVE_BG_BATCH_URL: http://backend:8000/remove-background-batch # Add if you implement batching
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  downloaded_models: # Define the named volume (optional, alternative to bind mount)